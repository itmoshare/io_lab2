/*
 * main.c
 *
 *  Created on: 6 но€б. 2017 г.
 *      Author: Laptop
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xintc_l.h"

#define TIMER_ADDRESS 0x41C00000
#define GPIO_ADDRESS  0x40000000
#define AXI_UARLITE_ADDRESS 0x40600000
#define MY_BASE_ADDRESS 0xC0000000

u32 t_old = 0;

//void int_handler(void) __attribute__ ((interrupt_handler));
//
//void int_handler(void)
//{
	//u8 inData = Xil_In8(AXI_UARLITE_ADDRESS);

	// STOP
	//Xil_Out32(MY_BASE_ADDRESS + 0x8, 0x0);
	//Xil_Out32(MY_BASE_ADDRESS + 0x0, 0x0);

	// Output Compare start
	//Xil_Out32(MY_BASE_ADDRESS + 0x18, inData / 2);
	//Xil_Out32(MY_BASE_ADDRESS + 0x1C, 0x4);
	// Timer 1 start
	//Xil_Out32(MY_BASE_ADDRESS + 0x0, inData);
	//Xil_Out32(MY_BASE_ADDRESS + 0x8, 0x2);
//}

int main()
{
	init_platform();

	print("Hello World\n\r");

	cleanup_platform();
	return 0;
//	for (int i = 0; i < 500; i++) {}
//	Xil_Out32(AXI_UARLITE_ADDRESS + 0xC, 0x10);
//	// AXI Timer configuration
//	Xil_Out32(TIMER_ADDRESS, 0x99);

//	while(1)
//	{
//		// timer 1 control register data
//		u32 c1 = Xil_In32(TIMER_ADDRESS);
//
//		// capture is occurred
//		if (c1 & 0x100)
//		{
//			// timer 1 load register data
//			u32 t = Xil_In32(TIMER_ADDRESS + 0x04);
//
//			if (t_old != 0)
//				Xil_Out32(GPIO_ADDRESS, t - t_old);
//
//			t_old = t;
//
//			// clear TINT flag
//			Xil_Out32(TIMER_ADDRESS, 0x199);
//		}
//	}
//	Xil_Out32(0xC0000008, 0x2);
}



/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_io.h"


#define TIMER_ADDRESS 0x41C00000
#define GPIO_ADDRESS  0x40000000
#define AXI_UARLITE_ADDRESS 0x40600000
#define MY_BASE_ADDRESS 0xC0000000

u32 t_old = 0;
int period;

int main()
{
    init_platform();

    char c[3];

    c[0] = inbyte();
    c[1] = inbyte();
    c[2] = inbyte();

    //period = (c[0] - '0') * 100 + (c[1] - '0') * 10 + (c[2] - '0');
    period = 0x567;

	// Output Compare start
    Xil_Out32(MY_BASE_ADDRESS + 0x18, 0x4);
	Xil_Out32(MY_BASE_ADDRESS + 0x1C, period / 2);
	// Timer 1 start
	Xil_Out32(MY_BASE_ADDRESS + 0x0, period);
	Xil_Out32(MY_BASE_ADDRESS + 0x8, 0x2);

	// AXI Timer configuration
	Xil_Out32(TIMER_ADDRESS, 0x99);

	while(1)
	{
		// timer 1 control register data
		u32 c1 = Xil_In32(TIMER_ADDRESS);

		// capture is occurred
		if (c1 & 0x100)
		{
			// timer 1 load register data
			u32 t = Xil_In32(TIMER_ADDRESS + 0x04);

			if (t_old != 0)
				Xil_Out32(GPIO_ADDRESS, t - t_old - 2);

			t_old = t;

			// clear TINT flag
			Xil_Out32(TIMER_ADDRESS, 0x199);
		}
	}

    cleanup_platform();
    return 0;
}
